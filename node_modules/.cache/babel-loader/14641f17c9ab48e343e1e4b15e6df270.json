{"ast":null,"code":"var _jsxFileName = \"/home/ktrush/code/PROJECT_portfolio/Burger/src/components/AddBugerForm.js\";\nimport React from \"react\";\nimport { FormErrors } from \"./FormErrors\";\n\nclass AddBurgerForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      price: 0,\n      status: \"Available\",\n      desc: \"\",\n      image: \"\",\n      formErrors: {\n        name: \"\",\n        price: 0,\n        status: \"\",\n        desc: \"\",\n        image: \"\"\n      },\n      nameValid: false,\n      priceValid: false,\n      descValid: false,\n      statusValid: false,\n      imageValid: false,\n      formValid: false\n    };\n\n    this.createBurger = event => {\n      event.preventDefault();\n      const burger = {\n        name: this.state.name,\n        price: this.state.price,\n        status: this.state.status,\n        desc: this.state.desc,\n        image: this.state.image\n      };\n      this.props.addBurger(burger);\n      event.target.reset();\n    };\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let nameValid = this.state.nameValid;\n    let priceValid = this.state.priceValid;\n    let descValid = this.state.descValid;\n    let statusValid = this.state.statusValid;\n    let imageValid = this.state.imageValid;\n\n    switch (fieldName) {\n      case \"name\":\n        nameValid = value !== \"\" || null || {} < [] || false;\n        fieldValidationErrors.name = nameValid ? \"\" : \" is invalid\";\n        break;\n\n      case \"price\":\n        priceValid = value !== 0 || !isNaN(value);\n        fieldValidationErrors.price = priceValid ? \"\" : \" is invalid\";\n        break;\n\n      case \"desc\":\n        descValid = value !== \"\" || null || {} < [] || false;\n        fieldValidationErrors.desc = descValid ? \"\" : \" is invalid\";\n        break;\n\n      case \"image\":\n        imageValid = value !== false;\n        fieldValidationErrors.image = imageValid ? \"\" : \" is invalid\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      nameValid: nameValid,\n      priceValid: priceValid,\n      descValid: descValid,\n      statusValid: statusValid,\n      imageValid: imageValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.nameValid && this.state.priceValid && this.state.descValid && this.state.imageValid\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"burger-edit\",\n      onSubmit: this.createBurger,\n      onChange: this.handleUserInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.name,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.price,\n      name: \"price\",\n      type: \"number\",\n      placeholder: \"Price\",\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      ref: this.statusRef,\n      name: \"status\",\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"available\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Available\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"unavailable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Unavailable\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"desc\",\n      value: this.state.desc,\n      placeholder: \"Dest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"image\",\n      value: this.state.image,\n      type: \"text\",\n      placeholder: \"Imade\",\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      disabled: !this.state.formValid,\n      type: \"submit\",\n      onClick: this.props.AddBurgerForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, \"+Add to Meny\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormErrors, {\n      formErrors: this.state.formErrors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default AddBurgerForm;","map":{"version":3,"sources":["/home/ktrush/code/PROJECT_portfolio/Burger/src/components/AddBugerForm.js"],"names":["React","FormErrors","AddBurgerForm","Component","state","name","price","status","desc","image","formErrors","nameValid","priceValid","descValid","statusValid","imageValid","formValid","createBurger","event","preventDefault","burger","props","addBurger","target","reset","handleUserInput","e","value","setState","validateField","fieldName","fieldValidationErrors","isNaN","validateForm","render","statusRef"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormErrors } from \"./FormErrors\";\n\n\nclass AddBurgerForm extends React.Component {\n\n  state = {\n    name: \"\",\n    price: 0,\n    status: \"Available\",\n    desc: \"\",\n    image: \"\",\n    formErrors: {\n      name: \"\",\n      price: 0,\n      status: \"\",\n      desc: \"\",\n      image: \"\",\n    },\n    nameValid: false,\n    priceValid: false,\n    descValid: false,\n    statusValid: false,\n    imageValid: false,\n    formValid: false,\n  };\n\n  createBurger = (event) => {\n    event.preventDefault();\n    const burger = {\n      name: this.state.name,\n      price: this.state.price,\n      status: this.state.status,\n      desc: this.state.desc,\n      image: this.state.image,\n    };\n\n    this.props.addBurger(burger);\n    event.target.reset();\n  };\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let nameValid = this.state.nameValid;\n    let priceValid = this.state.priceValid;\n    let descValid = this.state.descValid;\n    let statusValid = this.state.statusValid;\n    let imageValid = this.state.imageValid;\n    switch (fieldName) {\n      case \"name\":\n        nameValid = value !== \"\"||null||{}<[]||false;\n        fieldValidationErrors.name = nameValid ? \"\" : \" is invalid\";\n        break;\n      case \"price\":\n        priceValid = value !== 0 || !isNaN(value);\n        fieldValidationErrors.price = priceValid ? \"\" : \" is invalid\";\n        break;\n      case \"desc\":\n        descValid =value !== \"\"||null||{}<[]||false;\n        fieldValidationErrors.desc = descValid ? \"\" : \" is invalid\";\n        break;\n      case \"image\":\n        imageValid = value !== false;\n        fieldValidationErrors.image = imageValid ? \"\" : \" is invalid\";\n        break;\n      default:\n        break;\n    }\n  \n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        nameValid: nameValid,\n        priceValid: priceValid,\n        descValid: descValid,\n        statusValid: statusValid,\n        imageValid: imageValid,\n      },\n      this.validateForm,\n    );\n  }\n  \n  validateForm() {\n    this.setState({\n      formValid: this.state.nameValid && this.state.priceValid && this.state.descValid && this.state.imageValid\n    });\n  }\n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form\n          className=\"burger-edit\"\n          onSubmit={this.createBurger}\n          onChange={this.handleUserInput}\n        >\n          <input\n            value={this.state.name}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            autoComplete=\"off\"\n          />\n          <input\n            value={this.state.price}\n            name=\"price\"\n            type=\"number\"\n            placeholder=\"Price\"\n            autoComplete=\"off\"\n          />\n          <select ref={this.statusRef} name=\"status\" className=\"status\">\n            <option value=\"available\">Available</option>\n            <option value=\"unavailable\">Unavailable</option>\n          </select>\n          <textarea name=\"desc\" value={this.state.desc} placeholder=\"Dest\" />\n          <input\n            name=\"image\"\n            value={this.state.image}\n            type=\"text\"\n            placeholder=\"Imade\"\n            autoComplete=\"off\"\n          />\n          <button\n            className=\"button\"\n            disabled={!this.state.formValid}\n            type=\"submit\"\n            onClick={this.props.AddBurgerForm}\n          >\n            +Add to Meny\n          </button>\n        </form>\n        <div>\n          <FormErrors formErrors={this.state.formErrors} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AddBurgerForm;\n"]},"metadata":{},"sourceType":"module"}