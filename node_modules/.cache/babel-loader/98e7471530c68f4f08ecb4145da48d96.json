{"ast":null,"code":"var _jsxFileName = \"/home/ktrush/code/PROJECT_portfolio/Burger/src/components/Order.js\";\nimport React from \"react\";\nimport Shipment from \"./Shipment\";\n\nclass Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOrder = key => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      if (!burger) return null;\n      const isAvailable = burger && burger.status === \"available\";\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"unavailable\",\n          key: burger,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 14\n          }\n        }, \"Sorry \", burger ? burger.name : \"burger\", \" temporarily unavailable\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        kay: burger,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, count), count > 1 ? \" items \" : \" item \", burger.name, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, \" $\", count * burger.price), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"cancellItem\",\n        onClick: () => this.props.deleteOrderForm(key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"\\xD7\")));\n    };\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === \"available\";\n\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      } else {\n        return prevTotal;\n      }\n\n      console.log(total);\n    }, 0);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Your order\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, orderIds.map(this.renderOrder)), total > 0 ? /*#__PURE__*/React.createElement(Shipment, {\n      total: total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nothingSelected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Select dishes and add to order\"));\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/home/ktrush/code/PROJECT_portfolio/Burger/src/components/Order.js"],"names":["React","Shipment","Order","Component","renderOrder","key","burger","props","burgers","count","order","isAvailable","status","name","price","deleteOrderForm","render","orderIds","Object","keys","total","reduce","prevTotal","console","log","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Shipment from \"./Shipment\";\n\nclass Order extends React.Component {\n\n  renderOrder = (key) => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n\n\n    if (!burger) return null;\n\n    const isAvailable = burger && burger.status === \"available\";\n    if(!isAvailable) {\n      return <li className=\"unavailable\" key={burger}>\n        Sorry {burger? burger.name : \"burger\"} temporarily unavailable\n      </li>\n    }\n\n\n    return (\n    <li kay={burger}>\n      <span>\n        <span>{count}</span>\n        {count > 1 ?\" items \":\" item \"}{burger.name}{\" \"} \n        <span> &#36;{count * burger.price}</span>\n        <button \n          className = \"cancellItem\"\n          onClick={() => this.props.deleteOrderForm(key)}\n          >&times;</button>\n      </span>\n      </li>\n    )\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n\n      const isAvailable = burger && burger.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      } else {\n        return prevTotal;\n      } \n\n      console.log(total);\n\n    }, 0);\n\n    return (\n\n      <div className=\"order-wrap\">\n        <h2>Your order</h2>\n        <ul className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </ul>\n\n        {total > 0 ? (\n          <Shipment total={total} />\n        ) : (\n          <div className='nothingSelected'>\n            Select dishes and add to order\n          </div>\n        )}\n\n      </div>\n    )\n  }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}